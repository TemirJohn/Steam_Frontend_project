import { Link } from 'react-router-dom';

function GameCard({ game }) {
    return (
        <div className="game-card">
            <h3>{game.title}</h3>
            <p>${game.price}</p>
            <p>{game.description}</p>
            <Link to={`/games/${game.id}`}>View Details</Link>
        </div>
    );
}

export default GameCard;

import { Link } from 'react-router-dom';
import { useSelector, useDispatch } from 'react-redux';
import { logout } from '../redux/authReducer';

function Navbar() {
    const user = useSelector((state) => state.auth.user);
    const dispatch = useDispatch();

    return (
        <nav className="navbar">
            <Link to="/">Home</Link>
            {user ? (
                <>
                    {(user.role === 'admin' || user.role === 'developer') && (
                        <Link to="/dashboard">Dashboard</Link>
                    )}
                    <Link to="/games">Games</Link>
                    <button onClick={() => dispatch(logout())} className="btn btn-red">Logout</button>
                    <span >ðŸ‘‹ {user.name}</span>
                </>
            ) : (
                <>
                    <Link to="/login">Login</Link>
                    <Link to="/register">Register</Link>
                </>
            )}
        </nav>
    );
}

export default Navbar;

import { useState } from 'react';
import { useSelector } from 'react-redux';
import axios from 'axios';

function ReviewForm({ gameId, onReviewAdded }) {
    const [rating, setRating] = useState(5);
    const [comment, setComment] = useState('');
    const user = useSelector((state) => state.auth.user);

    async function handleSubmit(e) {
        e.preventDefault();
        if (!user) return;

        const review = { userId: user.id, gameId, rating, comment };

        try {
            await axios.post('/reviews', review);
            onReviewAdded();
            setRating(5);
            setComment('');
        } catch (error) {
            console.error('Error submitting review:', error);
            alert('Failed to submit review');
        }
    }

    return (
        <form onSubmit={handleSubmit}>
            <label>
                Rating (1-5):
                <input
                    type="number"
                    min="1"
                    max="5"
                    value={rating}
                    onChange={(e) => setRating(Number(e.target.value))}
                />
            </label>
            <label>
                Comment:
                <textarea
                    value={comment}
                    onChange={(e) => setComment(e.target.value)}
                />
            </label>
            <button type="submit" className="btn btn-blue">Submit Review</button>
        </form>
    );
}

export default ReviewForm;