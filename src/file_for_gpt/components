import { Link } from 'react-router-dom';

function GameCard({ game }) {
    return (
        <div className="game-card p-4 bg-gray-100 rounded shadow">
            <img src={`http://localhost:8080/${game.image}`} alt={game.name} className="w-full h-48 object-cover mb-2" />
            <h3 className="text-lg font-semibold">{game.name}</h3>
            <p>${game.price.toFixed(2)}</p>
            <p className="text-gray-600">{game.description}</p>
            <Link to={`/games/${game.id}`} className="text-blue-500 hover:underline">View Details</Link>
        </div>
    );
}

export default GameCard;

import { useState, useRef, useEffect } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { useSelector, useDispatch } from 'react-redux';
import { logout } from '../redux/authReducer';

function Navbar() {
    const user = useSelector((state) => state.auth.user);
    const dispatch = useDispatch();
    const navigate = useNavigate();
    const [menuOpen, setMenuOpen] = useState(false);
    const menuRef = useRef(null);

    const handleLogout = () => {
        dispatch(logout());
        navigate('/');
    };

    // Закрытие меню при клике вне
    useEffect(() => {
        function handleClickOutside(event) {
            if (menuRef.current && !menuRef.current.contains(event.target)) {
                setMenuOpen(false);
            }
        }
        document.addEventListener('mousedown', handleClickOutside);
        return () => document.removeEventListener('mousedown', handleClickOutside);
    }, []);

    return (
        <nav className="flex justify-between items-center bg-gray-800 p-4 text-white shadow-md">
            <div className="flex items-center space-x-4">
                <Link to="/" className="hover:underline">Home</Link>
                {user && (user.role === 'admin' || user.role === 'developer') && (
                    <Link to="/dashboard" className="hover:underline">Dashboard</Link>
                )}
            </div>

            <div ref={menuRef}>
                {user ? (
                    <>
                        <button
                            onClick={() => setMenuOpen(!menuOpen)}
                            className="flex items-center space-x-2 bg-gray-700 px-4 py-2 rounded hover:bg-gray-600 transition"
                        >
                            <span className="text-lg">👤</span>
                            <span className="hidden md:inline">{user.name}</span>
                        </button>

                        {menuOpen && (
                            <div className="absolute right-0 mt-2 w-48 bg-white text-black rounded shadow-lg overflow-hidden z-50">
                                <Link
                                    to="/profile"
                                    className="block px-4 py-2 hover:bg-gray-100"
                                    onClick={() => setMenuOpen(false)}
                                >
                                    Profile
                                </Link>
                                <Link
                                    to="/settings"
                                    className="block px-4 py-2 hover:bg-gray-100"
                                    onClick={() => setMenuOpen(false)}
                                >
                                    Settings
                                </Link>
                                <button
                                    onClick={handleLogout}
                                    className="w-full text-left px-4 py-2 hover:bg-gray-100"
                                >
                                    Logout
                                </button>
                            </div>
                        )}
                    </>
                ) : (
                    <>
                        <div className="flex items-center space-x-4">
                            <Link to="/login" className="hover:underline">Login</Link>
                            <Link to="/register" className="hover:underline">Register</Link>
                        </div>
                    </>
                )}
            </div>
        </nav>
    );
}

export default Navbar;

import { useState } from 'react';
import { useSelector } from 'react-redux';
import axios from '../utils/axiosConfig'; // Используем настроенный axios
import { toast } from 'react-toastify';

function ReviewForm({ gameId, onReviewAdded }) {
    const [rating, setRating] = useState(5);
    const [comment, setComment] = useState('');
    const user = useSelector((state) => state.auth.user);

    async function handleSubmit(e) {
        e.preventDefault();
        if (!user) {
            toast.error('Please log in to submit a review');
            return;
        }

        if (comment.trim() === '') {
            toast.error('Comment cannot be empty');
            return;
        }

        const review = { gameId, rating, comment };

        try {
            await axios.post('/reviews', review);
            toast.success('Review submitted successfully!');
            onReviewAdded();
            setRating(5);
            setComment('');
        } catch (error) {
            console.error('Error submitting review:', error);
            toast.error('Failed to submit review');
        }
    }

    return (
        <form onSubmit={handleSubmit} className="space-y-4">
            <label className="block">
                Rating:
                <div className="flex space-x-2 mt-2">
                    {[1, 2, 3, 4, 5].map((star) => (
                        <button
                            type="button"
                            key={star}
                            onClick={() => setRating(star)}
                            className={`text-2xl ${star <= rating ? 'text-yellow-400' : 'text-gray-400'}`}
                        >
                            ★
                        </button>
                    ))}
                </div>
            </label>
            <label className="block">
                Comment:
                <textarea
                    value={comment}
                    onChange={(e) => setComment(e.target.value)}
                    className="border p-2 rounded w-full mt-2"
                    placeholder="Write your thoughts about the game..."
                />
            </label>
            <button
                type="submit"
                className="bg-blue-500 text-white px-4 py-2 rounded w-full"
            >
                Submit Review
            </button>
        </form>
    );
}

export default ReviewForm;